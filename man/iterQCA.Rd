% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iterQCA.R
\name{iterQCA}
\alias{iterQCA}
\title{Iteratively do sufficiency tests on k features out of the given features}
\usage{
iterQCA(
  features,
  k,
  dataCali,
  outcome,
  incl.cut = 0.8,
  pri.cut = 0.51,
  n.cut = 10,
  sort.by = c("OUT", "incl"),
  complete = T
)
}
\arguments{
\item{features}{string vector, a vector of features to choose from}

\item{k}{number, number of features to choose for each sufficiency test}

\item{dataCali}{dataframe, calibrated data}

\item{outcome}{string, name of the outcome variable}

\item{incl.cut}{inclusion cut-off(s); see `?QCA::truthTable` for details}

\item{pri.cut}{minimal score for the PRI; see `?QCA::truthTable` for details}

\item{n.cut}{minimum number of cases for a remainder row; see `?QCA::truthTable` for details}

\item{sort.by}{Sort the truth table according to various columns}

\item{complete}{Logical, whether to print complete truth table}
}
\value{
a summary table of solutions to all combinations of k out of n feautres
}
\description{
This function iteratively generates all combinations of k
features from the given feature vector (n choose k), and perform a sufficiency
test for each combination of the k features.
}
\examples{
\dontrun{
fDf <- getFeatureImp(xgb, voteData, "vote")
fVec <- head(fDf$feature, 10)
iterQCA(features = fVec, k=4, dataCali = voteDataCalibrated, outcome = "vote")
}
}
